    /* COARSEN_P2D program, version 1.0
	The program reads in a PLOT3D file containing the mesh (generated by CONSTRUCT2D)
	and a second integer argument (n>=1) that specified the number of grid nodes
	to be skipped along each block direction from the original mesh file.
	The code then provides, as an output, a new PLOT3D grid file, containing the coarsened mesh.
	This is useful in performing mesh sensitivities studies, generating coarser grid levels from a reference fine mesh.
    Copyright (C) 2024  Mauro Minervino

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */

#include <iostream>
#include <fstream>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>

using namespace std;
int main(int argc, char** argv) {

int ni=0;
int nk=0;
int nskip=atoi(argv[2]);

ifstream in_file(argv[1]);
    if (in_file.is_open()) {
        string line;
        int i=0;
		int m=0;
        getline(in_file, line);
		i = line.find_first_of("123456789");
		m = line.find_last_of("123456789");
		line=line.substr(i,m+1);
		i = line.find_first_of("\t ");
        m = line.find_last_of("\t ");
		ni = atof(line.substr(0,i).data());
		nk = atof(line.substr(m+1).data());
		cout << "ni= " << ni << " ; nk= " << nk << "\n";
        in_file.close();
    }

double values[ni][nk][2];
	for (int v = 0; v < 2; v++) {
        for (int k = 0; k < nk; k++) {
            for (int i = 0; i < ni; i++) {
                values[i][k][v] = NAN;
            }
        }
	}
int ntot=ni*nk*2;
double in_values[ntot];
    for (int i = 0; i < ntot; i++) {
		in_values[i] = NAN;
	}

in_file.open(argv[1]);
	if (in_file.is_open()) {
		string line;
		int i=0;
		getline(in_file, line);	//skip first line
		while (getline(in_file, line)) {
			in_values[i] = atof(line.data());
			i++;
		}
		in_file.close();
	}
for (int v = 0; v < 2; v++) {
    for (int k = 0; k < nk; k++) {
        for (int i = 0; i < ni; i++) {
			values[i][k][v] = in_values[ni*nk*v+ni*k+i];
		}
	}
}

FILE* pFile;
string OutFileName="coarsened.p3d";
pFile = fopen (OutFileName.c_str(),"w");
fprintf(pFile, "%d\t%d\n",(ni-1)/(int)pow(2,nskip)+1, (nk-1)/(int)pow(2,nskip)+1);
for (int v = 0; v < 2; v++) {
	for (int k = 0; k < nk; k=k+pow(2,nskip)) {
		for (int i = 0; i < ni; i=i+pow(2,nskip)) {
			fprintf(pFile, "%15.8E\n",values[i][k][v]);
		}
	}
}
fclose (pFile);

}
